Question There are 2N people a company is planning to interview. The cost of flying the i-th person to city A is costs[i][0], and the cost of flying the i-th person to city B is costs[i][1].
Return the minimum cost to fly every person to a city such that exactly N people arrive in each city.

Solution â€“ 
def twoCitySchedCost(self, costs: List[List[int]]) -> int:
        Acount = 0
        Bcount = 0
        totalcost = 0
        count =0
        costs.sort(key = lambda cost : cost[0] - cost[1])
        costA = sum([cost[0] for cost in costs[:len(costs)//2]])
        costB = sum([cost[1] for cost in costs[len(costs)//2:len(costs)]])
                
        return costA + costB
